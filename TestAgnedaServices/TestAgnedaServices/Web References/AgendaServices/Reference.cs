//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3607
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.3607.
// 
#pragma warning disable 1591

namespace TestAgnedaServices.AgendaServices {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="StorageServiceSoap", Namespace="http://tempuri.org/")]
    public partial class StorageService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private AuthenTokenHeader authenTokenHeaderValueField;
        
        private System.Threading.SendOrPostCallback SaveAgendaFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAgendaFileFromWebServerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAvailableAgendaFilesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAvailableAgendaFilesAndDatesOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public StorageService() {
            this.Url = global::TestAgnedaServices.Properties.Settings.Default.TestAgnedaServices_AgendaServices_StorageService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public AuthenTokenHeader AuthenTokenHeaderValue {
            get {
                return this.authenTokenHeaderValueField;
            }
            set {
                this.authenTokenHeaderValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SaveAgendaFileCompletedEventHandler SaveAgendaFileCompleted;
        
        /// <remarks/>
        public event GetAgendaFileFromWebServerCompletedEventHandler GetAgendaFileFromWebServerCompleted;
        
        /// <remarks/>
        public event GetAvailableAgendaFilesCompletedEventHandler GetAvailableAgendaFilesCompleted;
        
        /// <remarks/>
        public event GetAvailableAgendaFilesAndDatesCompletedEventHandler GetAvailableAgendaFilesAndDatesCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenTokenHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveAgendaFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveAgendaFile(string Payload, string FileName) {
            object[] results = this.Invoke("SaveAgendaFile", new object[] {
                        Payload,
                        FileName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveAgendaFileAsync(string Payload, string FileName) {
            this.SaveAgendaFileAsync(Payload, FileName, null);
        }
        
        /// <remarks/>
        public void SaveAgendaFileAsync(string Payload, string FileName, object userState) {
            if ((this.SaveAgendaFileOperationCompleted == null)) {
                this.SaveAgendaFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveAgendaFileOperationCompleted);
            }
            this.InvokeAsync("SaveAgendaFile", new object[] {
                        Payload,
                        FileName}, this.SaveAgendaFileOperationCompleted, userState);
        }
        
        private void OnSaveAgendaFileOperationCompleted(object arg) {
            if ((this.SaveAgendaFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveAgendaFileCompleted(this, new SaveAgendaFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAgendaFileFromWebServer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAgendaFileFromWebServer(string City, string State, string Board, string FileName) {
            object[] results = this.Invoke("GetAgendaFileFromWebServer", new object[] {
                        City,
                        State,
                        Board,
                        FileName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAgendaFileFromWebServerAsync(string City, string State, string Board, string FileName) {
            this.GetAgendaFileFromWebServerAsync(City, State, Board, FileName, null);
        }
        
        /// <remarks/>
        public void GetAgendaFileFromWebServerAsync(string City, string State, string Board, string FileName, object userState) {
            if ((this.GetAgendaFileFromWebServerOperationCompleted == null)) {
                this.GetAgendaFileFromWebServerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAgendaFileFromWebServerOperationCompleted);
            }
            this.InvokeAsync("GetAgendaFileFromWebServer", new object[] {
                        City,
                        State,
                        Board,
                        FileName}, this.GetAgendaFileFromWebServerOperationCompleted, userState);
        }
        
        private void OnGetAgendaFileFromWebServerOperationCompleted(object arg) {
            if ((this.GetAgendaFileFromWebServerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAgendaFileFromWebServerCompleted(this, new GetAgendaFileFromWebServerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAvailableAgendaFiles", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AgendaFile[] GetAvailableAgendaFiles(string City, string State, string Board) {
            object[] results = this.Invoke("GetAvailableAgendaFiles", new object[] {
                        City,
                        State,
                        Board});
            return ((AgendaFile[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAvailableAgendaFilesAsync(string City, string State, string Board) {
            this.GetAvailableAgendaFilesAsync(City, State, Board, null);
        }
        
        /// <remarks/>
        public void GetAvailableAgendaFilesAsync(string City, string State, string Board, object userState) {
            if ((this.GetAvailableAgendaFilesOperationCompleted == null)) {
                this.GetAvailableAgendaFilesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAvailableAgendaFilesOperationCompleted);
            }
            this.InvokeAsync("GetAvailableAgendaFiles", new object[] {
                        City,
                        State,
                        Board}, this.GetAvailableAgendaFilesOperationCompleted, userState);
        }
        
        private void OnGetAvailableAgendaFilesOperationCompleted(object arg) {
            if ((this.GetAvailableAgendaFilesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAvailableAgendaFilesCompleted(this, new GetAvailableAgendaFilesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAvailableAgendaFilesAndDates", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AgendaFile[] GetAvailableAgendaFilesAndDates(string City, string State, string Board) {
            object[] results = this.Invoke("GetAvailableAgendaFilesAndDates", new object[] {
                        City,
                        State,
                        Board});
            return ((AgendaFile[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAvailableAgendaFilesAndDatesAsync(string City, string State, string Board) {
            this.GetAvailableAgendaFilesAndDatesAsync(City, State, Board, null);
        }
        
        /// <remarks/>
        public void GetAvailableAgendaFilesAndDatesAsync(string City, string State, string Board, object userState) {
            if ((this.GetAvailableAgendaFilesAndDatesOperationCompleted == null)) {
                this.GetAvailableAgendaFilesAndDatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAvailableAgendaFilesAndDatesOperationCompleted);
            }
            this.InvokeAsync("GetAvailableAgendaFilesAndDates", new object[] {
                        City,
                        State,
                        Board}, this.GetAvailableAgendaFilesAndDatesOperationCompleted, userState);
        }
        
        private void OnGetAvailableAgendaFilesAndDatesOperationCompleted(object arg) {
            if ((this.GetAvailableAgendaFilesAndDatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAvailableAgendaFilesAndDatesCompleted(this, new GetAvailableAgendaFilesAndDatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://tempuri.org/", IsNullable=false)]
    public partial class AuthenTokenHeader : System.Web.Services.Protocols.SoapHeader {
        
        private string tokenField;
        
        private string pathField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string Token {
            get {
                return this.tokenField;
            }
            set {
                this.tokenField = value;
            }
        }
        
        /// <remarks/>
        public string Path {
            get {
                return this.pathField;
            }
            set {
                this.pathField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class AgendaFile {
        
        private string fileNameField;
        
        private string dateField;
        
        /// <remarks/>
        public string FileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
            }
        }
        
        /// <remarks/>
        public string Date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void SaveAgendaFileCompletedEventHandler(object sender, SaveAgendaFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveAgendaFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveAgendaFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetAgendaFileFromWebServerCompletedEventHandler(object sender, GetAgendaFileFromWebServerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAgendaFileFromWebServerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAgendaFileFromWebServerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetAvailableAgendaFilesCompletedEventHandler(object sender, GetAvailableAgendaFilesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAvailableAgendaFilesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAvailableAgendaFilesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AgendaFile[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AgendaFile[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetAvailableAgendaFilesAndDatesCompletedEventHandler(object sender, GetAvailableAgendaFilesAndDatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAvailableAgendaFilesAndDatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAvailableAgendaFilesAndDatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AgendaFile[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AgendaFile[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591