<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        //////IE////////8gT////////yBP////////IE////////8gT////////yBP////////IE
</value>
  </data>
</root>